{"ast":null,"code":"import { a as r } from \"./chunk-BKUYYLI4.js\";\nimport { a as e } from \"./chunk-KKGCPNDS.js\";\nimport { n as t, o } from \"./chunk-LTLDPYW5.js\";\nvar i = [\"biz\", \"ca\", \"com\", \"info\", \"name\", \"net\", \"org\", \"qc.ca\"];\nvar n = [\"gmail.com\", \"hotmail.com\", \"yahoo.ca\"];\nvar P = {\n    domain_suffix: i,\n    free_email: n\n  },\n  a = P;\nvar f = [\"{{location.city_prefix}} {{person.firstName}}{{location.city_suffix}}\", \"{{location.city_prefix}} {{person.firstName}}\", \"{{person.firstName}}{{location.city_suffix}}\", \"{{person.last_name.generic}}{{location.city_suffix}}\"];\nvar m = [{\n  alpha2: \"CA\",\n  alpha3: \"CAN\",\n  numeric: \"124\"\n}];\nvar p = [\"A#? #?#\", \"B#? #?#\", \"C#? #?#\", \"E#? #?#\", \"G#? #?#\", \"H#? #?#\", \"J#? #?#\", \"K#? #?#\", \"L#? #?#\", \"M#? #?#\", \"N#? #?#\", \"P#? #?#\", \"R#? #?#\", \"S#? #?#\", \"T#? #?#\", \"V#? #?#\", \"X#? #?#\", \"Y#? #?#\"];\nvar u = [\"Alberta\", \"Colombie-Britannique\", \"Manitoba\", \"Nouveau-Brunswick\", \"Terre-Neuve-et-Labrador\", \"Nouvelle-\\xC9cosse\", \"Territoires du Nord-Ouest\", \"Nunavut\", \"Ontario\", \"\\xCEle-du-Prince-\\xC9douard\", \"Qu\\xE9bec\", \"Saskatchewan\", \"Yukon\"];\nvar l = [\"AB\", \"BC\", \"MB\", \"NB\", \"NL\", \"NS\", \"NU\", \"NT\", \"ON\", \"PE\", \"QC\", \"SK\", \"YK\"];\nvar c = [\"{{person.firstName}} {{location.street_suffix}}\", \"{{person.lastName}} {{location.street_suffix}}\"];\nvar A = {\n    city_pattern: f,\n    country_code: m,\n    postcode: p,\n    state: u,\n    state_abbr: l,\n    street_pattern: c\n  },\n  s = A;\nvar B = {\n    title: \"French (Canada)\",\n    code: \"fr_CA\",\n    country: \"CA\",\n    language: \"fr\",\n    endonym: \"Fran\\xE7ais (Canada)\",\n    dir: \"ltr\",\n    script: \"Latn\"\n  },\n  d = B;\nvar x = {\n  generic: [{\n    value: \"{{person.last_name.generic}}\",\n    weight: 1\n  }]\n};\nvar g = {\n    last_name_pattern: x\n  },\n  N = g;\nvar _ = [\"### ###-####\", \"1 ### ###-####\", \"### ###-####, poste ###\"];\nvar y = [\"+1##########\"];\nvar b = [\"(###) ###-####\"];\nvar L = {\n    human: _,\n    international: y,\n    national: b\n  },\n  h = L;\nvar k = {\n    format: h\n  },\n  C = k;\nvar v = {\n    internet: a,\n    location: s,\n    metadata: d,\n    person: N,\n    phone_number: C\n  },\n  D = v;\nvar yt = new t({\n  locale: [D, r, e, o]\n});\nexport { D as a, yt as b };","map":{"version":3,"names":["a","r","e","n","t","o","i","P","domain_suffix","free_email","f","m","alpha2","alpha3","numeric","p","u","l","c","A","city_pattern","country_code","postcode","state","state_abbr","street_pattern","s","B","title","code","country","language","endonym","dir","script","d","x","generic","value","weight","g","last_name_pattern","N","_","y","b","L","human","international","national","h","k","format","C","v","internet","location","metadata","person","phone_number","D","yt","locale"],"sources":["C:/Users/Sumit/Desktop/project/book-csv-editor/node_modules/@faker-js/faker/dist/chunk-Y3IJGE4R.js"],"sourcesContent":["import{a as r}from\"./chunk-BKUYYLI4.js\";import{a as e}from\"./chunk-KKGCPNDS.js\";import{n as t,o}from\"./chunk-LTLDPYW5.js\";var i=[\"biz\",\"ca\",\"com\",\"info\",\"name\",\"net\",\"org\",\"qc.ca\"];var n=[\"gmail.com\",\"hotmail.com\",\"yahoo.ca\"];var P={domain_suffix:i,free_email:n},a=P;var f=[\"{{location.city_prefix}} {{person.firstName}}{{location.city_suffix}}\",\"{{location.city_prefix}} {{person.firstName}}\",\"{{person.firstName}}{{location.city_suffix}}\",\"{{person.last_name.generic}}{{location.city_suffix}}\"];var m=[{alpha2:\"CA\",alpha3:\"CAN\",numeric:\"124\"}];var p=[\"A#? #?#\",\"B#? #?#\",\"C#? #?#\",\"E#? #?#\",\"G#? #?#\",\"H#? #?#\",\"J#? #?#\",\"K#? #?#\",\"L#? #?#\",\"M#? #?#\",\"N#? #?#\",\"P#? #?#\",\"R#? #?#\",\"S#? #?#\",\"T#? #?#\",\"V#? #?#\",\"X#? #?#\",\"Y#? #?#\"];var u=[\"Alberta\",\"Colombie-Britannique\",\"Manitoba\",\"Nouveau-Brunswick\",\"Terre-Neuve-et-Labrador\",\"Nouvelle-\\xC9cosse\",\"Territoires du Nord-Ouest\",\"Nunavut\",\"Ontario\",\"\\xCEle-du-Prince-\\xC9douard\",\"Qu\\xE9bec\",\"Saskatchewan\",\"Yukon\"];var l=[\"AB\",\"BC\",\"MB\",\"NB\",\"NL\",\"NS\",\"NU\",\"NT\",\"ON\",\"PE\",\"QC\",\"SK\",\"YK\"];var c=[\"{{person.firstName}} {{location.street_suffix}}\",\"{{person.lastName}} {{location.street_suffix}}\"];var A={city_pattern:f,country_code:m,postcode:p,state:u,state_abbr:l,street_pattern:c},s=A;var B={title:\"French (Canada)\",code:\"fr_CA\",country:\"CA\",language:\"fr\",endonym:\"Fran\\xE7ais (Canada)\",dir:\"ltr\",script:\"Latn\"},d=B;var x={generic:[{value:\"{{person.last_name.generic}}\",weight:1}]};var g={last_name_pattern:x},N=g;var _=[\"### ###-####\",\"1 ### ###-####\",\"### ###-####, poste ###\"];var y=[\"+1##########\"];var b=[\"(###) ###-####\"];var L={human:_,international:y,national:b},h=L;var k={format:h},C=k;var v={internet:a,location:s,metadata:d,person:N,phone_number:C},D=v;var yt=new t({locale:[D,r,e,o]});export{D as a,yt as b};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}